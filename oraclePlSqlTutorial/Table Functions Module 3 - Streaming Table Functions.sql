/*CREATE TABLE STOCKS
(
  TICKER VARCHAR(20),
  TRADE_DATE DATE,
  OPEN_PRICE NUMBER,
  CLOSE_PRICE NUMBER
)*/

/*
CREATE TABLE TICKERS
(
  TICKER VARCHAR2(20),
  PRICEDATE DATE,
  PRICETYPE VARCHAR2(1),
  PRICE NUMBER
)
*/


/*BEGIN
  FOR INDX IN 1 .. 1000
  LOOP
     -- might as well be optimistic!
     INSERT INTO STOCKS 
            VALUES('STK' || INDX,SYSDATE,INDX,INDX+15);
  END LOOP;
  COMMIT;
END;*/


CREATE OR REPLACE TYPE TICKERS_OT IS OBJECT
(
  TICKER VARCHAR2(20),
  PRICEDATE DATE,
  PRICETYPE VARCHAR2(1),
  PRICE NUMBER
);

/

CREATE OR REPLACE TYPE TICKERS_NT IS TABLE OF TICKERS_OT;

/
CREATE OR REPLACE PACKAGE STOCK_MGR
IS
  TYPE STOCKS_RC IS REF CURSOR RETURN STOCKS%ROWTYPE;
  TYPE TICKERS_RC IS REF CURSOR RETURN TICKERS%ROWTYPE;
END STOCK_MGR;

/

CREATE OR REPLACE FUNCTION DOUBLED(ROWS_IN STOCK_MGR.STOCKS_RC)
  RETURN TICKERS_NT
IS
  TYPE STOCKS_AAT IS TABLE OF STOCKS%ROWTYPE INDEX BY PLS_INTEGER;
  L_STOCKS STOCKS_AAT;
  L_DOUBLED TICKERS_NT := TICKERS_NT();
BEGIN

  LOOP
    FETCH ROWS_IN BULK COLLECT INTO L_STOCKS LIMIT 100;
    EXIT WHEN L_STOCKS.COUNT=0;
    
    FOR L_ROW IN 1 .. L_STOCKS.COUNT
    LOOP
      L_DOUBLED.EXTEND;
      L_DOUBLED(L_DOUBLED.LAST) := TICKERS_OT(L_STOCKS(L_ROW).TICKER,L_STOCKS(L_ROW).TRADE_DATE,'O',L_STOCKS(L_ROW).OPEN_PRICE);
    
      L_DOUBLED.EXTEND;
      L_DOUBLED(L_DOUBLED.LAST) := TICKERS_OT(L_STOCKS(L_ROW).TICKER,L_STOCKS(L_ROW).TRADE_DATE,'C',L_STOCKS(L_ROW).CLOSE_PRICE);
    
    END LOOP;
  END LOOP;  
  CLOSE ROWS_IN;
  
  RETURN L_DOUBLED;

END DOUBLED;


/

SELECT * FROM TABLE(DOUBLED(CURSOR(SELECT * FROM STOCKS)));

/
INSERT INTO TICKERS
  SELECT * FROM TABLE(DOUBLED(CURSOR(SELECT * FROM STOCKS)));

/  
SELECT * FROM TICKERS;  

/
SELECT * FROM TICKERS FETCH FIRST 10 ROWS ONLY; 
  